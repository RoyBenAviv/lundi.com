// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Workspace {
  id          String   @id @default(uuid())
  name        String
  description String?
  color       String?
  background  String @default("pink_purple.png")
  boards      Boards[]
  recentlyVisited DateTime?
}

model Boards {
  id          String     @id @default(uuid())
  name        String
  users       Users[]
  groups      Groups[]
  columns     Column[]
  items       Item[]
  order       Int        @default(0)
  workspace   Workspace? @relation(fields: [workspaceId], references: [id])
  workspaceId String?
  boardItemsType String @default("Item")
  recentlyVisited DateTime?
}

model Groups {
  id       String  @id @default(uuid())
  name     String
  items    Item[]
  color    String?
  boards   Boards? @relation(fields: [boardsId], references: [id])
  boardsId String?
  order       Int        @default(0)
  width Int     @default(180)
}

model Users {
  id       String  @id @default(uuid())
  name     String
  test      String?
  boards   Boards? @relation(fields: [boardsId], references: [id])
  boardsId String?
}

model Item {
  id           String        @id @default(uuid())
  name         String
  group        Groups?       @relation(fields: [groupId], references: [id])
  groupId      String?
  board        Boards?       @relation(fields: [boardId], references: [id])
  boardId      String?
  order       Int        @default(0)
  columnValues ColumnValue[]
}

model Column {
  id         String  @id @default(uuid())
  name       String
  columnType String
  boards     Boards? @relation(fields: [boardsId], references: [id])
  boardsId   String?
  ColumnValue ColumnValue[]
  width Int? @default(120)
}

model ColumnValue {
  id       String  @id @default(uuid())
  value    Json
  item     Item?   @relation(fields: [itemId], references: [id])
  itemId   String
  column   Column? @relation(fields: [columnId], references: [id])
  columnId String
}
